plugins {
    id 'nu.studer.jooq' version '2.0.4'
}

apply plugin: 'java'

dependencies {
    jooqRuntime "org.postgresql:postgresql:${versions.postgresql}"
    compile "org.jooq:jooq:${versions.jooq}"
}

jooq {
    version = "$versions.jooq"

    main(sourceSets.main) {
        jdbc {
            driver = 'org.postgresql.Driver'
            url = "jdbc:postgresql://$db.host/$db.name"
            user = "$db.user"
            password = "$db.password"
        }
        generator {
            database {
                name = 'org.jooq.util.postgres.PostgresDatabase'
                inputSchema = 'ehr'

                // schema_version is created by flyway to track versions
                excludes = 'schema_version'

                //forcedTypes {
                //    forcedType {
                //        userType = 'java.lang.String'
                //        binding = 'io.medrecord.ehr.ehr.jooq.binding.PostgresJsonbBinding'
                //        expression = 'entry|other_context'
                //        types = 'JSONB'
                //    }
                //}
            }
            target {
                packageName = 'com.ethercis.jooq.pg'
                directory = "src/main/java-jooq"
            }
            strategy {
                name = null
                matchers {
                    schemas {
                        schema {
                            schemaIdentifier {
                                transform = 'UPPER'

                                // Add _SCHEMA to schema identifiers as newer versions of jOOQ
                                // will add an _ to duplicate identifiers.
                                // This way the schema ehr will be named EHR_SCHEMA and the
                                // table ehr will be named EHR. Without this, the ehr schema
                                // will be named EHR and the table ehr will be named EHR_
                                // This was changed in jOOQ after version 3.7
                                expression = '\$0_SCHEMA'
                            }
                        }
                    }
                }
            }
        }
    }
}
sourceSets {
    main {
        java {
            // these sources are generated by jooq and stored in the repo
            // this module also generates jooq sources and puts them in src/main/java-jooq
            // we are keeping src/main/java for now to make merging in the future easier
            srcDirs = [ 'src/main/java-jooq' ]
        }
    }
}
idea {
    module {
        excludeDirs = [ file("src/main/java") ]
    }
}

tasks.generateMainJooqSchemaSource.dependsOn(':ecis-db:flywayMigrate')

clean {
    delete "$projectDir/src/main/java-jooq/"
}